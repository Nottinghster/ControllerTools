{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "rust: remote SteamDeck debug setup",
            "type": "shell",
            "command": "${workspaceFolder}/scripts/remote_debug.sh",
            "args": [
                "${workspaceFolder}",
                "steamdeck",
                "17777"
            ],
            "group": "none",
            "dependsOn": [
                "rust: cross build SteamDeck",
            ],
        },
        {
            "label": "rust: cross build SteamDeck",
            "type": "shell",
            "command": "cross build --manifest-path backend/Cargo.toml",
            "problemMatcher": [
                "$rustc"
            ],
            "group": "build"
        },
        {
            "label": "checkforsettings",
            "type": "shell",
            "group": "none",
            "detail": "Check that settings.json has been created",
            "command": "bash -c ${workspaceFolder}/.vscode/config.sh",
            "problemMatcher": []
        },
        {
            "label": "pnpmsetup",
            "type": "shell",
            "group": "build",
            "detail": "Setup pnpm",
            "command": "pnpm i",
            "problemMatcher": []
        },
        {
            "label": "updatefrontendlib",
            "type": "shell",
            "group": "build",
            "detail": "Update deck-frontend-lib",
            "command": "pnpm update decky-frontend-lib --latest",
            "problemMatcher": []
        },
        {
            "label": "buildfrontend",
            "type": "npm",
            "group": "build",
            "detail": "rollup -c",
            "script": "build",
            "path": "",
            "problemMatcher": []
        },
        {
            "label": "buildbackend",
            "type": "shell",
            "group": "build",
            "detail": "Build Rust backend",
            "command": "cross build --manifest-path backend/Cargo.toml",
            "problemMatcher": []
        },
        {
            "label": "buildall",
            "group": "build",
            "detail": "Build decky-plugin-template",
            "dependsOrder": "sequence",
            "dependsOn": [
                "pnpmsetup",
                "buildfrontend",
                "buildbackend"
            ],
            "problemMatcher": []
        },
        {
            "label": "createfolders",
            "detail": "Create plugins folder in expected directory",
            "type": "shell",
            "group": "none",
            "dependsOn": [
                "checkforsettings"
            ],
            "command": "ssh deck@${config:deckip} -p ${config:deckport} ${config:deckkey} 'mkdir -p ${config:deckdir}/homebrew/pluginloader && mkdir -p ${config:deckdir}/homebrew/plugins'",
            "problemMatcher": []
        },
        {
            "label": "deploy frontend",
            "detail": "Deploy plugin frontend to deck",
            "type": "shell",
            "group": "none",
            "dependsOn": [
                "buildfrontend",
            ],
            "command": "rsync -azp --delete --rsh='ssh -p ${config:deckport} ${config:deckkey}' dist deck@${config:deckip}:${config:deckdir}/homebrew/plugins/ControllerTools && DECKIP=${config:deckip} node scripts/reload_frontend.js",
            "problemMatcher": []
        },
        {
            "label": "deploy",
            "detail": "Deploy dev plugin to deck",
            "type": "shell",
            "group": "none",
            "dependsOn": [
                "createfolders",
                "chmodfolders"
            ],
            "command": "rsync -azp --delete --rsh='ssh -p ${config:deckport} ${config:deckkey}' build/ deck@${config:deckip}:${config:deckdir}/homebrew/plugins/ControllerTools",
            "problemMatcher": []
        },
        {
            "label": "chmodfolders",
            "detail": "chmods folders to prevent perms issues",
            "type": "shell",
            "group": "none",
            "command": "ssh deck@${config:deckip} -p ${config:deckport} ${config:deckkey} 'echo '${config:deckpass}' | sudo -S chmod -R ug+rw ${config:deckdir}/homebrew/'",
            "problemMatcher": []
        },
        {
            "label": "deployall",
            "dependsOrder": "sequence",
            "group": "none",
            "dependsOn": [
                "deploy",
                "chmodfolders"
            ],
            "problemMatcher": []
        },
        {
            "label": "restartdecky",
            "detail": "restart decky plugin_loader service",
            "type": "shell",
            "group": "none",
            "command": "ssh deck@${config:deckip} -p ${config:deckport} ${config:deckkey} 'echo '${config:deckpass}' | sudo -S systemctl restart plugin_loader'",
            "problemMatcher": []
        },
        {
            "label": "allinone",
            "detail": "Build and deploy",
            "dependsOrder": "sequence",
            "group": "test",
            "dependsOn": [
                "buildall",
                "deployall"
            ],
            "problemMatcher": []
        }
    ]
}